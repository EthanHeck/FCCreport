fill = NA, color = "white", size = 1) +
# Goal boxes (5.5m from goal line, 18.3m wide)
# Left goal box
geom_rect(aes(xmin = -field_length/2, xmax = -field_length/2 + 5.5,
ymin = -18.3/2, ymax = 18.3/2),
fill = NA, color = "white", size = 1) +
# Right goal box
geom_rect(aes(xmin = field_length/2 - 5.5, xmax = field_length/2,
ymin = -18.3/2, ymax = 18.3/2),
fill = NA, color = "white", size = 1) +
# Penalty spots (11m from goal line)
geom_point(aes(x = -field_length/2 + 11, y = 0), color = "white", size = 2) +
geom_point(aes(x = field_length/2 - 11, y = 0), color = "white", size = 2) +
# Goals (2.44m high, 7.32m wide)
# Left goal
geom_segment(aes(x = -field_length/2, y = -7.32/2,
xend = -field_length/2 - 2, yend = -7.32/2),
color = "black", size = 1.5) +
geom_segment(aes(x = -field_length/2, y = 7.32/2,
xend = -field_length/2 - 2, yend = 7.32/2),
color = "black", size = 1.5) +
geom_segment(aes(x = -field_length/2 - 2, y = -7.32/2,
xend = -field_length/2 - 2, yend = 7.32/2),
color = "black", size = 1.5) +
# Right goal
geom_segment(aes(x = field_length/2, y = -7.32/2,
xend = field_length/2 + 2, yend = -7.32/2),
color = "black", size = 1.5) +
geom_segment(aes(x = field_length/2, y = 7.32/2,
xend = field_length/2 + 2, yend = 7.32/2),
color = "black", size = 1.5) +
geom_segment(aes(x = field_length/2 + 2, y = -7.32/2,
xend = field_length/2 + 2, yend = 7.32/2),
color = "black", size = 1.5) +
# Points
geom_point(aes(x = point1_x, y = point1_y), color = "pink", size = 4) +
geom_point(aes(x = point2_x, y = point2_y), color = "white", size = 4)
# Add player names if provided
if (!is.null(player1_name)) {
p <- p + geom_text(aes(x = point1_x, y = point1_y, vjust = -2),
label = player1_name,
color = "black",
fontface = "bold",
size = 5)
}
if (!is.null(player2_name)) {
p <- p + geom_text(aes(x = point2_x, y = point2_y, vjust = -2),
label = player2_name,
color = "black",
fontface = "bold",
size = 5)
}
# Add arrow based on direction parameter
if (arrow_direction == "1to2") {
p <- p + geom_segment(aes(x = point1_x, y = point1_y,
xend = point2_x, yend = point2_y),
arrow = arrow(length = unit(0.5, "cm"), type = "closed"),
color = "black", size = 1.2)
} else if (arrow_direction == "2to1") {
p <- p + geom_segment(aes(x = point2_x, y = point2_y,
xend = point1_x, yend = point1_y),
arrow = arrow(length = unit(0.5, "cm"), type = "closed"),
color = "black", size = 1.2)
}
# Clean up the plot
p <- p + theme_void() +
theme(
panel.border = element_rect(color = "black", fill = NA, size = 2),
plot.background = element_rect(fill = "white"),
plot.margin = margin(20, 20, 20, 20)
)
return(p)
}
soccer_field_custom <- create_soccer_field(point1_x = 45, point1_y = -3, point2_x = 30, point2_y = -25, arrow_direction = "2to1", player1_name = "Auzmendi",player2_name = "Nunez")
soccer_field_custom
# Load required libraries
library(ggplot2)
library(grid)
library(ggforce)
# Function definition
create_soccer_field <- function(point1_x = -44.5, point1_y = -10,
point2_x = 15, point2_y = -20,
arrow_direction = "2to1",
player1_name = NULL,
player2_name = NULL,
point1_color = "#F05323",
point2_color = "#263B80") {
# Create base plot with field dimensions
p <- ggplot() +
# Add field outline
geom_rect(aes(xmin = -52.5, xmax = 52.5, ymin = -34, ymax = 34),
fill = "darkgreen", color = "white") +
# Add penalty areas
geom_rect(aes(xmin = 35.3, xmax = 52.5, ymin = -20.9, ymax = 20.9),
fill = "darkgreen", color = "white") +
geom_rect(aes(xmin = -52.5, xmax = -35.3, ymin = -20.9, ymax = 20.9),
fill = "darkgreen", color = "white") +
# Add goals
geom_rect(aes(xmin = 52.5, xmax = 53.5, ymin = -3.6, ymax = 3.6),
fill = "white", color = "white") +
geom_rect(aes(xmin = -53.5, xmax = -52.5, ymin = -3.6, ymax = 3.6),
fill = "white", color = "white") +
# Add center circle
geom_circle(aes(x0 = 0, y0 = 0, r = 9.15), color = "white", fill = "darkgreen") +
# Add center line
geom_vline(xintercept = 0, color = "white") +
# Add points and arrow
geom_point(aes(x = point1_x, y = point1_y), color = point1_color, size = 4) +
geom_point(aes(x = point2_x, y = point2_y), color = point2_color, size = 4)
# Add arrow based on direction parameter
if (arrow_direction == "1to2") {
p <- p + geom_segment(aes(x = point1_x, y = point1_y,
xend = point2_x, yend = point2_y),
arrow = arrow(length = unit(0.5, "cm")),
color = "white", size = 1)
} else if (arrow_direction == "2to1") {
p <- p + geom_segment(aes(x = point2_x, y = point2_y,
xend = point1_x, yend = point1_y),
arrow = arrow(length = unit(0.5, "cm")),
color = "white", size = 1)
}
# Add player names if provided
if (!is.null(player1_name)) {
p <- p + annotate("text", x = point1_x, y = point1_y + 2,
label = player1_name, color = "white")
}
if (!is.null(player2_name)) {
p <- p + annotate("text", x = point2_x, y = point2_y + 2,
label = player2_name, color = "white")
}
# Add theme elements
p + theme_void() +
theme(panel.background = element_rect(fill = "darkgreen"),
plot.background = element_rect(fill = "darkgreen")) +
coord_fixed(ratio = 1)
}
soccer_field_custom <- create_soccer_field(
point1_x = 45,
point1_y = -3,
point2_x = 30,
point2_y = -25,
arrow_direction = "2to1",
player1_name = "Denkey",
player2_name = "Bucha",
point1_color = "orange",
point2_color = "blue"
)
print(soccer_field_custom)
soccer_field_custom <- create_soccer_field(
point1_x = 45,
point1_y = 0,
point2_x = 30,
point2_y = -25,
arrow_direction = "2to1",
player1_name = "Denkey",
player2_name = "Bucha",
point1_color = "orange",
point2_color = "blue"
)
print(soccer_field_custom)
soccer_field_custom <- create_soccer_field(
point1_x = 40,
point1_y = -3,
point2_x = 30,
point2_y = -25,
arrow_direction = "2to1",
player1_name = "Denkey",
player2_name = "Bucha",
point1_color = "orange",
point2_color = "blue"
)
print(soccer_field_custom)
soccer_field_custom <- create_soccer_field(
point1_x = 37,
point1_y = -3,
point2_x = 30,
point2_y = -25,
arrow_direction = "2to1",
player1_name = "Denkey",
player2_name = "Bucha",
point1_color = "orange",
point2_color = "blue"
)
print(soccer_field_custom)
soccer_field_custom <- create_soccer_field(
point1_x = 37,
point1_y = -3,
point2_x = 30,
point2_y = 15,
arrow_direction = "1to2",
player1_name = "Denkey",
player2_name = "Bucha",
point1_color = "orange",
point2_color = "blue"
)
print(soccer_field_custom)
soccer_field_custom <- create_soccer_field(
point1_x = 37,
point1_y = -3,
point2_x = 30,
point2_y = 7,
arrow_direction = "1to2",
player1_name = "Denkey",
player2_name = "Bucha",
point1_color = "orange",
point2_color = "blue"
)
print(soccer_field_custom)
soccer_field_custom <- create_soccer_field(
point1_x = 37,
point1_y = -3,
point2_x = 30,
point2_y = 4,
arrow_direction = "1to2",
player1_name = "Denkey",
player2_name = "Bucha",
point1_color = "orange",
point2_color = "blue"
)
print(soccer_field_custom)
soccer_field_custom <- create_soccer_field(
point1_x = 37,
point1_y = -3,
point2_x = 30,
point2_y = 4,
arrow_direction = "1to2",
player1_name = "Cordova",
player2_name = "Ibanez",
point1_color = "yellow",
point2_color = "blue"
)
print(soccer_field_custom)
soccer_field_custom <- create_soccer_field(
point1_x = -50,
point1_y = -3,
point2_x = -50,
point2_y = 4,
arrow_direction = "1to2",
player1_name = "Cordova",
player2_name = "Ibanez",
point1_color = "yellow",
point2_color = "blue"
)
print(soccer_field_custom)
soccer_field_custom <- create_soccer_field(
point1_x = -50,
point1_y = -10,
point2_x = -50,
point2_y = 4,
arrow_direction = "1to2",
player1_name = "Cordova",
player2_name = "Ibanez",
point1_color = "yellow",
point2_color = "blue"
)
print(soccer_field_custom)
soccer_field_custom <- create_soccer_field(
point1_x = -50,
point1_y = -22,
point2_x = -50,
point2_y = 4,
arrow_direction = "1to2",
player1_name = "Cordova",
player2_name = "Ibanez",
point1_color = "yellow",
point2_color = "blue"
)
print(soccer_field_custom)
# Load required libraries
library(ggplot2)
library(grid)
library(ggforce)
# Function definition
create_soccer_field <- function(point1_x = -44.5, point1_y = -10,
point2_x = 15, point2_y = -20,
arrow_direction = "2to1",
player1_name = NULL,
player2_name = NULL,
point1_color = "#F05323",
point2_color = "#263B80") {
# Create base plot with field dimensions
p <- ggplot() +
# Add field outline
geom_rect(aes(xmin = -52.5, xmax = 52.5, ymin = -34, ymax = 34),
fill = "darkgreen", color = "white") +
# Add penalty areas
geom_rect(aes(xmin = 35.3, xmax = 52.5, ymin = -20.9, ymax = 20.9),
fill = "darkgreen", color = "white") +
geom_rect(aes(xmin = -52.5, xmax = -35.3, ymin = -20.9, ymax = 20.9),
fill = "darkgreen", color = "white") +
# Add goals
geom_rect(aes(xmin = 52.5, xmax = 53.5, ymin = -3.6, ymax = 3.6),
fill = "white", color = "white") +
geom_rect(aes(xmin = -53.5, xmax = -52.5, ymin = -3.6, ymax = 3.6),
fill = "white", color = "white") +
# Add center circle
geom_circle(aes(x0 = 0, y0 = 0, r = 9.15), color = "white", fill = "darkgreen") +
# Add center line
geom_vline(xintercept = 0, color = "white") +
# Add points and arrow
geom_point(aes(x = point1_x, y = point1_y), color = point1_color, size = 4) +
geom_point(aes(x = point2_x, y = point2_y), color = point2_color, size = 4)
# Add arrow based on direction parameter
if (arrow_direction == "1to2") {
p <- p + geom_segment(aes(x = point1_x, y = point1_y,
xend = point2_x, yend = point2_y),
arrow = arrow(length = unit(0.5, "cm")),
color = "white", size = 1)
} else if (arrow_direction == "2to1") {
p <- p + geom_segment(aes(x = point2_x, y = point2_y,
xend = point1_x, yend = point1_y),
arrow = arrow(length = unit(0.5, "cm")),
color = "white", size = 1)
}
# Add player names if provided
if (!is.null(player1_name)) {
p <- p + annotate("text", x = point1_x, y = point1_y + 2,
label = player1_name, color = "white")
}
if (!is.null(player2_name)) {
p <- p + annotate("text", x = point2_x, y = point2_y + 2,
label = player2_name, color = "white")
}
# Add theme elements
p + theme_void() +
theme(panel.background = element_rect(fill = "darkgreen"),
plot.background = element_rect(fill = "darkgreen")) +
coord_fixed(ratio = 1)
}
soccer_field_custom <- create_soccer_field(
point1_x = 37,
point1_y = -3,
point2_x = 30,
point2_y = 4,
arrow_direction = "1to2",
player1_name = "Denkey",
player2_name = "Bucha",
point1_color = "orange",
point2_color = "blue"
)
# Load required libraries
library(ggplot2)
library(grid)
library(ggforce)
# Function definition
create_soccer_field <- function(point1_x = -44.5, point1_y = -10,
point2_x = 15, point2_y = -20,
arrow_direction = "2to1",
player1_name = NULL,
player2_name = NULL,
point1_color = "#F05323",
point2_color = "#263B80") {
# Create base plot with field dimensions
p <- ggplot() +
# Add field outline
geom_rect(aes(xmin = -52.5, xmax = 52.5, ymin = -34, ymax = 34),
fill = "darkgreen", color = "white") +
# Add penalty areas
geom_rect(aes(xmin = 35.3, xmax = 52.5, ymin = -20.9, ymax = 20.9),
fill = "darkgreen", color = "white") +
geom_rect(aes(xmin = -52.5, xmax = -35.3, ymin = -20.9, ymax = 20.9),
fill = "darkgreen", color = "white") +
# Add goals
geom_rect(aes(xmin = 52.5, xmax = 53.5, ymin = -3.6, ymax = 3.6),
fill = "white", color = "white") +
geom_rect(aes(xmin = -53.5, xmax = -52.5, ymin = -3.6, ymax = 3.6),
fill = "white", color = "white") +
# Add center circle
geom_circle(aes(x0 = 0, y0 = 0, r = 9.15), color = "white", fill = "darkgreen") +
# Add center line
geom_vline(xintercept = 0, color = "white") +
# Add points and arrow
geom_point(aes(x = point1_x, y = point1_y), color = point1_color, size = 4) +
geom_point(aes(x = point2_x, y = point2_y), color = point2_color, size = 4)
# Add arrow based on direction parameter
if (arrow_direction == "1to2") {
p <- p + geom_segment(aes(x = point1_x, y = point1_y,
xend = point2_x, yend = point2_y),
arrow = arrow(length = unit(0.5, "cm")),
color = "white", size = 1)
} else if (arrow_direction == "2to1") {
p <- p + geom_segment(aes(x = point2_x, y = point2_y,
xend = point1_x, yend = point1_y),
arrow = arrow(length = unit(0.5, "cm")),
color = "white", size = 1)
}
# Add player names if provided
if (!is.null(player1_name)) {
p <- p + annotate("text", x = point1_x, y = point1_y + 2,
label = player1_name, color = "white")
}
if (!is.null(player2_name)) {
p <- p + annotate("text", x = point2_x, y = point2_y + 2,
label = player2_name, color = "white")
}
# Add theme elements
p + theme_void() +
theme(panel.background = element_rect(fill = "darkgreen"),
plot.background = element_rect(fill = "darkgreen")) +
coord_fixed(ratio = 1)
}
soccer_field_custom <- create_soccer_field(
point1_x = 37,
point1_y = -3,
point2_x = 30,
point2_y = 4,
arrow_direction = "1to2",
player1_name = "Denkey",
player2_name = "Bucha",
point1_color = "orange",
point2_color = "blue"
)
print(soccer_field_custom)
soccer_field_custom <- create_soccer_field(
point1_x = -50,
point1_y = -22,
point2_x = -50,
point2_y = 4,
arrow_direction = "1to2",
player1_name = "Cordova",
player2_name = "Ibanez",
point1_color = "yellow",
point2_color = "blue"
)
print(soccer_field_custom)
# Plot the data using ggplot2
ggplot(evander_stats_long, aes(x = Metric, y = Value, fill = Type)) +
geom_bar(stat = "identity", position = "dodge") +
geom_text(aes(label = round(Value, 2)),
position = position_dodge(width = 0.9),
vjust = -0.3, size = 5) +
theme_minimal() +
labs(title = "Evander's Performance vs Tigres UANL Compared to 2024 Season Average",
x = "Metric",
y = "Value") +
theme(axis.text.x = element_text(angle = 30, hjust = 1))
# Load necessary libraries
install.packages("ggplot2")
install.packages("tidyr")
library(ggplot2)
library(tidyr)
# Create the dataframe
evander_stats <- data.frame(
Metric = c("Shots", "Shots on Target", "Goals", "Assists", "Key Passes", "Dribbles"),
Vs_Tigres = c(3, 1, 0, 0, 2, 4),
Avg_2024 = c(3.18, 1.29, 0.30, 0.36, 2.74, 2.42)
)
# Reshape the dataframe for ggplot
evander_stats_long <- evander_stats %>%
pivot_longer(cols = c(Vs_Tigres, Avg_2024),
names_to = "Type",
values_to = "Value")
# Plot the data using ggplot2
ggplot(evander_stats_long, aes(x = Metric, y = Value, fill = Type)) +
geom_bar(stat = "identity", position = "dodge") +
geom_text(aes(label = round(Value, 2)),
position = position_dodge(width = 0.9),
vjust = -0.3, size = 5) +
theme_minimal() +
labs(title = "Evander's Performance vs Tigres UANL Compared to 2024 Season Average",
x = "Metric",
y = "Value") +
theme(axis.text.x = element_text(angle = 30, hjust = 1))
install.packages("ggplot2")
# Load necessary libraries
install.packages("ggplot2")
install.packages("tidyr")
library(ggplot2)
library(tidyr)
# Define FC Cincinnati colors
fc_orange <- "#F05323"
fc_blue <- "#003087"
# Create the dataframe
evander_stats <- data.frame(
Metric = c("Shots", "Shots on Target", "Goals", "Assists", "Key Passes", "Dribbles"),
Vs_Tigres = c(3, 1, 0, 0, 2, 4),
Avg_2024 = c(3.18, 1.29, 0.30, 0.36, 2.74, 2.42)
)
# Reshape the dataframe for ggplot
evander_stats_long <- evander_stats %>%
pivot_longer(cols = c(Vs_Tigres, Avg_2024),
names_to = "Type",
values_to = "Value")
# Define custom colors for each category
custom_colors <- c("Vs_Tigres" = fc_orange, "Avg_2024" = fc_blue)
# Plot the data using ggplot2 with dark theme
ggplot(evander_stats_long, aes(x = Metric, y = Value, fill = Type)) +
geom_bar(stat = "identity", position = "dodge", color = "white", width = 0.6) +
geom_text(aes(label = round(Value, 2)),
position = position_dodge(width = 0.6),
vjust = -0.3, size = 5, color = "white") +
scale_fill_manual(values = custom_colors, labels = c("Vs Tigres", "2024 Avg")) +
theme_minimal(base_size = 14) +
labs(title = "Evander's Performance vs Tigres UANL Compared to 2024 Season Average",
x = "Metric",
y = "Value",
fill = "Performance") +
theme(
plot.background = element_rect(fill = "black", color = NA),
panel.background = element_rect(fill = "black", color = NA),
legend.background = element_rect(fill = "black", color = NA),
legend.key = element_rect(fill = "black"),
text = element_text(color = "white"),
axis.text = element_text(color = "white"),
axis.title = element_text(color = "white"),
legend.text = element_text(color = "white"),
legend.title = element_text(color = "white"),
axis.text.x = element_text(angle = 30, hjust = 1),
panel.grid = element_blank()
)
install.packages("tidyr")
install.packages("ggplot2")
